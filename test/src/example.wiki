'''Wikity''' is a very useful build tool!

<div style="border:1px solid">
<h1>Headings</h1>
= Root =
== Heading ==
=== Subheading ===
== Broken heading ===
====== Small heading ======
</div>

<div style="border:1px solid">
<h1>TOC</h1>
__TOC__

<div style="border:1px solid">
<h1>Formatting</h1>
''Italic''
'''Bold'''
'''''Bold Italic'''''
</div>

<div style="border:1px solid">
<h1>List</h1>
* Bulleted list
* Bulleted list item 2
** Sub-item
*** Indented
* Root item
# Numbered list
# Numbered list item 2
## Sub-item
### Indented
# Root item
;Pseudoheader
: Root indent
:: Subindent
::: Indented
</div>

<div style="border:1px solid">
<h1>HorizontalRule</h1>
-----
</div>

<div style="border:1px solid">
<h1>InternalLink</h1>
[[Link]]
[[Link|Text]]
</div>

<div style="border:1px solid">
<h1>FileEmbed</h1>
[[File:Example.png|alt=Example]]
[[File:Example.png|200px|thumb|right|alt=Alt text|Example text]]
</div>

<div style="border:1px solid">
<h1>ExternalLink</h1>
[https://github.com]
[https://google.com External link]
[not a link]
</div>

<div style="border:1px solid">
<h1>TemplateCall</h1>
{{subst}}
{{subst|Hello!}}
{{subst|named=Named}}
{{subst|named=
This ''[[Item|item]]'' is <span style="color:pink;">coloured</span>!
}}
{{nonexistent template}}
</div>

<div style="border:1px solid">
<h1>HTML</h1>
<script src="malicious.js"></script>
<div onclick="malicious()"></div>
<code>Code</code>
</div>

<div style="border:1px solid">
<h1>CodeBock</h1>
``code``
```
code block
```
<div style="border:1px solid">
</div>

<div style="border:1px solid">
<h1>Table</h1>
{| class="wikitable"
|+ Caption
! Heading
! Heading
|- class="row"
| Cell
| Cell
|-
| Inline || Inline
|}
</div>

<div style="border:1px solid">
<h1>Nowiki</h1>
<nowiki>
Non-parsed content &amp; tags.
{{#vardefine: varname | var text }}
<div onclick="malicious"></div>
</nowiki>
</div>

<div style="border:1px solid">
<h1>TextFunctions</h1>
Each side of the <code>=</code> must match.
* {{#lc:TEXT}}             = text
* {{#ucfirst:text}}        = Text
* {{#len:12345}}           = 5
* {{#sub:string|2|4}}      = ring
* {{#pos:text|x}}          = 2
* {{#padleft:text|5|_}}    = _text
* {{#padright:msg|5|_}}    = msg__
* {{#replace:Message|e|3}} = M3ssag3
* {{#explode:A-B-C-D|-|2}} = C
* {{#urlencode:t e x t}}   = t%20e%20x%20t
* {{#urldecode:a%20b%27c}} = a b'c
</div>

<div style="border:1px solid">
<h1>ParserFunctions</h1>
Each side of the <code>&rarr;</code> must match.
* {{#if: true | true text | false text }} &rarr; true text
* {{ #vardefine: test | value }} &rarr; (empty: variable defined)
* [[{{ #var:test }}]] &rarr; [[value]]
* "{{#var: unset | this {{=}} unset }}" &rarr; "this = unset"
* {{#switch: value
| nope = none
| val = val!
| #default = one
}} &rarr; one
* {{#date: yyyy-mm-dd (ddd) 'm' | 27 Mar 21}} &rarr; [today's date] m
* {{#vardefine: nested | {{#var: null | nil}} {{#vardefine: x | 1}} {{=}}.}} &rarr; (empty: variable defined)
* {{#var: nested}} &rarr; nil =.
</div>

<div style="border:1px solid">
<h1>Other</h1>
{{displaytitle: Example Page}}
</div>
